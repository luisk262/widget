{"version":3,"sources":["components/StockQuote.js","App.js","index.js"],"names":["MARKET_STACK_QUOTE_URL","process","MARKET_STACK_TICKER_URL","StockQuote","props","useState","price","var","time","quote","setQuote","stockExchange","name","stock","setStock","useEffect","axiosInstance","get","params","access_key","symbols","symbol","interval","date_from","moment","subtract","format","date_to","limit","then","result","data","length","lastQuote","last","Math","trunc","open","date","stock_exchange","acronym","varColor","className","App","axios","defaults","headers","Accept","create","baseURL","REACT_APP_BASE_URL","document","querySelectorAll","forEach","div","ReactDOM","render","StrictMode","dataset"],"mappings":"oOAIMA,EAAsB,UAAMC,gCAAN,aACtBC,EAAuB,UAAMD,gCAAN,YAsEdE,MApEf,SAAoBC,GAAQ,IAAD,EACGC,mBAAS,CAC/BC,MAAO,KACPC,IAAK,KACLC,KAAM,OAJa,mBAChBC,EADgB,KACTC,EADS,OAMGL,mBAAS,CAC/BM,cAAe,MACfC,KAAM,QARa,mBAMhBC,EANgB,KAMTC,EANS,KAWvBC,qBAAU,WACNC,EAAcC,IAAIjB,EAAwB,CACtCkB,OAAQ,CACJC,WAAYlB,UACZmB,QAAShB,EAAMiB,OACfC,SAAU,QACVC,UAAWC,MAASC,SAAS,EAAG,OAAOC,OAAO,cAC9CC,QAASH,MAASE,OAAO,cACzBE,MAAO,OAEZC,MAAK,SAACC,GACL,GAAKA,EAAOC,KAAKA,QAAQD,EAAOC,KAAKA,KAAKC,QAAU,GAApD,CAGA,IAAMC,EAAYH,EAAOC,KAAKA,KAAK,GACnCrB,EAAS,CACLJ,MAAO2B,EAAUC,KACjB3B,IAAK4B,KAAKC,MAA+C,MAAvC,EAAKH,EAAUC,KAAKD,EAAUI,OAAkB,IAClE7B,KAAMgB,IAAOS,EAAUK,MAAMZ,OAAO,6BAKhDX,qBAAU,WACNC,EAAcC,IAAd,UAAqBf,EAArB,YAAgDE,EAAMiB,QAAU,CAC5DH,OAAQ,CACJC,WAAYlB,aAEjB4B,MAAK,SAACC,GACAA,EAAOC,MAGZjB,EAAS,CACLH,cAAemB,EAAOC,KAAKQ,eAAeC,QAC1C5B,KAAMkB,EAAOC,KAAKnB,aAK9B,IAAM6B,EAAWhC,EAAMF,IAAM,EAAI,eAAiB,iBAElD,OACI,sBAAKmC,UAAW,6CAAhB,UACI,sBAAMA,UAAW,2CAAjB,SAA8DtC,EAAMiB,SACpE,sBAAMqB,UAAW,0CAAjB,SAA6D7B,EAAMD,OACnE,uBAAM8B,UAAW,0CAAjB,cAA8D7B,EAAMF,cAApE,OACA,sBAAK+B,UAAW,2CAAhB,UACI,sBAAKA,UAAW,oEAAhB,cAAuFjC,EAAMH,SAC7F,sBAAKoC,UAAW,2BAAhB,UACI,sBAAKA,UAAW,YAAcD,EAA9B,UAAyChC,EAAMF,IAA/C,OACA,qBAAKmC,UAAW,8CAAhB,SAAgEjC,EAAMD,iBCxD3EmC,MATf,SAAavC,GAEX,OACE,8BACE,cAAC,EAAD,CAAYiB,OAAQjB,EAAMiB,YCAhCuB,IAAMC,SAASC,QAAU,CAAEC,OAAQ,oBACnC,IAAM/B,EAAgB4B,IAAMI,OAAO,CAC/BC,QAAShD,uQAAYiD,qBAEVlC,cAGImC,SAASC,iBAAiB,+BAGlCC,SAAQ,SAAAC,GACfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKpC,OAAQiC,EAAII,QAAQrC,WAEzBiC,Q","file":"static/js/main.3a678d5e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport axiosInstance from './../index';\n\nconst MARKET_STACK_QUOTE_URL = `${process.env.REACT_APP_MARKETSTACK_BASE_URL}/intraday`;\nconst MARKET_STACK_TICKER_URL = `${process.env.REACT_APP_MARKETSTACK_BASE_URL}/tickers`;\n\nfunction StockQuote(props) {\n    const [quote, setQuote] = useState({\n        price: '--',\n        var: '--',\n        time: '--'\n    });\n    const [stock, setStock] = useState({\n        stockExchange: 'N/A',\n        name: 'N/A',\n    });\n\n    useEffect(() => {\n        axiosInstance.get(MARKET_STACK_QUOTE_URL, {\n            params: {\n                access_key: process.env.REACT_APP_MARKETSTACK_ACCESS_KEY,\n                symbols: props.symbol,\n                interval: '15min',\n                date_from: moment().subtract(1, 'day').format('YYYY-MM-DD'),\n                date_to: moment().format('YYYY-MM-DD'),\n                limit: '1',\n            }\n        }).then((result) => {\n            if (!result.data.data || result.data.data.length <= 0) {\n                return;\n            }\n            const lastQuote = result.data.data[0];\n            setQuote({\n                price: lastQuote.last,\n                var: Math.trunc(-(1 - (lastQuote.last/lastQuote.open)) * 10000) / 100,\n                time: moment(lastQuote.date).format('YYYY-MM-DD HH:mm'),\n            })\n        });\n    });\n\n    useEffect(() => {\n        axiosInstance.get(`${MARKET_STACK_TICKER_URL}/${props.symbol}`, {\n            params: {\n                access_key: process.env.REACT_APP_MARKETSTACK_ACCESS_KEY,\n            }\n        }).then((result) => {\n            if (!result.data) {\n                return;\n            }\n            setStock({\n                stockExchange: result.data.stock_exchange.acronym,\n                name: result.data.name,\n            })\n        });\n    });\n\n    const varColor = quote.var < 0 ? 'text-red-500' : 'text-green-500';\n\n    return (\n        <div className={'quote rounded-lg shadow-md p-4 bg-gray-800'}>\n            <span className={'quoteSymbol text-sm text-white font-bold'}>{props.symbol}</span>\n            <span className={'quoteSymbol text-2xs text-gray-400 ml-1'}>{stock.name}</span>\n            <span className={'quoteSymbol text-2xs text-gray-400 ml-1'}>({stock.stockExchange})</span>\n            <div className={'quote flex flex-row justify-between mt-1'}>\n                <div className={'quotePrice self-center text-2xl font-bold items-center text-white'}>${quote.price}</div>\n                <div className={'flex flex-col text-right'}>\n                    <div className={'quoteVar ' + varColor}>{quote.var}%</div>\n                    <div className={'quoteTime text-right text-2xs text-gray-400'}>{quote.time}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default StockQuote;\n","import React from 'react';\nimport StockQuote from \"./components/StockQuote\";\n\nfunction App(props) {\n\n  return (\n    <div>\n      <StockQuote symbol={props.symbol}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\nimport App from './App';\n\n// Setup Axios once here\naxios.defaults.headers = { Accept: 'application/json' };\nconst axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_BASE_URL\n});\nexport default axiosInstance;\n\n// Find all widget divs\nconst widgetDivs = document.querySelectorAll('.nicoraynaud-finance-widget');\n\n// Inject our React App into each class\nwidgetDivs.forEach(div => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App symbol={div.dataset.symbol}/>\n      </React.StrictMode>,\n        div\n    );\n});\n"],"sourceRoot":""}